name: release
concurrency: release
on:
  push:
    branches:
      - omaster
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
      - uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: 5.7.0
      - id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true

  sonar:
    runs-on: ubuntu-latest
    needs:
      - version
    steps:
      - uses: actions/checkout@v2
      - name: Sonar cache
        id: cache-sonar
        uses: actions/cache@v2
        with:
          path: /opt/sonar-scanner
          key: ${{ runner.os }}-sonar
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectVersion=${{ needs.version.outputs.semVer }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3

  python-release:
    runs-on: ubuntu-latest
    needs:
      - version
      - pre-commit
      - sonar
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: VERSION file block-pvc-scanner
        run: |
          echo "${{ needs.version.outputs.semVer }}" > block_pvc_scanner/src/block_pvc_scanner/VERSION
      - name: VERSION file pod-pvc-mapping
        run: |
          echo "${{ needs.version.outputs.semVer }}" > pod_pvc_mapping/src/pod_pvc_mapping/VERSION
      - name: build deps
        run: |
          python3 -m pip install --upgrade build
      - name: build Python package block-pvc-scanner
        run: |
          cd block_pvc_scanner
          python3 -m build --sdist
      - name: build Python package pod-pvc-mapping
        run: |
          cd pod_pvc_mapping
          python3 -m build --sdist

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "block_pvc_scanner/dist/*.tar.gz,pod_pvc_mapping/dist/*.tar.gz"
          tag: ${{ needs.version.outputs.semVer }}
          commit: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

  docker-release-bps:
    runs-on: ubuntu-latest
    needs:
      - version
      - pre-commit
      - sonar
      - python-release
    steps:
      - uses: actions/checkout@v2
      - name: VERSION file block-pvc-scanner
        run: |
          echo "${{ needs.version.outputs.semVer }}" > block_pvc_scanner/src/block_pvc_scanner/VERSION

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build and push block-pvc-scanner
        id: docker_build_block_pvc_scanner
        uses: docker/build-push-action@v2
        with:
          context: ./block_pvc_scanner
          file: ./block_pvc_scanner/Dockerfile
          platforms: linux/amd64
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/block-pvc-scanner:${{ needs.version.outputs.semVer }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/block-pvc-scanner:latest
            ghcr.io/${{ github.repository_owner }}/block-pvc-scanner:${{ needs.version.outputs.semVer }}
          cache-from: type=gha, scope=${{ github.workflow }}-bps
          cache-to: type=gha, scope=${{ github.workflow }}-bps

  docker-release-bps-arm:
    runs-on: ubuntu-latest
    needs:
      - version
      - pre-commit
      - sonar
      - python-release
    steps:
      - uses: actions/checkout@v2
      - name: VERSION file block-pvc-scanner
        run: |
          echo "${{ needs.version.outputs.semVer }}" > block_pvc_scanner/src/block_pvc_scanner/VERSION

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build and push block-pvc-scanner
        id: docker_build_block_pvc_scanner
        uses: docker/build-push-action@v2
        with:
          context: ./block_pvc_scanner
          file: ./block_pvc_scanner/Dockerfile
          platforms: linux/arm64
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/block-pvc-scanner:${{ needs.version.outputs.semVer }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/block-pvc-scanner:latest
            ghcr.io/${{ github.repository_owner }}/block-pvc-scanner:${{ needs.version.outputs.semVer }}
          cache-from: type=gha, scope=${{ github.workflow }}-bps-arm
          cache-to: type=gha, scope=${{ github.workflow }}-bps-arm

  docker-release-ppm:
    runs-on: ubuntu-latest
    needs:
      - version
      - pre-commit
      - sonar
      - python-release
    steps:
      - uses: actions/checkout@v2
      - name: VERSION file pod-pvc-mapping
        run: |
          echo "${{ needs.version.outputs.semVer }}" > pod_pvc_mapping/src/pod_pvc_mapping/VERSION

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build and push pod-pvc-mapping
        id: docker_build_pod_pvc_mapping
        uses: docker/build-push-action@v2
        with:
          context: ./pod_pvc_mapping
          file: ./pod_pvc_mapping/Dockerfile
          platforms: linux/amd64
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/pod-pvc-mapping:${{ needs.version.outputs.semVer }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/pod-pvc-mapping:latest
            ghcr.io/${{ github.repository_owner }}/pod-pvc-mapping:${{ needs.version.outputs.semVer }}
          cache-from: type=gha, scope=${{ github.workflow }}-ppm
          cache-to: type=gha, scope=${{ github.workflow }}-ppm

  docker-release-ppm-arm:
    runs-on: ubuntu-latest
    needs:
      - version
      - pre-commit
      - sonar
      - python-release
    steps:
      - uses: actions/checkout@v2
      - name: VERSION file pod-pvc-mapping
        run: |
          echo "${{ needs.version.outputs.semVer }}" > pod_pvc_mapping/src/pod_pvc_mapping/VERSION

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker build and push pod-pvc-mapping
        id: docker_build_pod_pvc_mapping
        uses: docker/build-push-action@v2
        with:
          context: ./pod_pvc_mapping
          file: ./pod_pvc_mapping/Dockerfile
          platforms: linux/arm64
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/pod-pvc-mapping:${{ needs.version.outputs.semVer }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/pod-pvc-mapping:latest
            ghcr.io/${{ github.repository_owner }}/pod-pvc-mapping:${{ needs.version.outputs.semVer }}
          cache-from: type=gha, scope=${{ github.workflow }}-ppm-arm
          cache-to: type=gha, scope=${{ github.workflow }}-ppm-arm

  helm-release:
    runs-on: ubuntu-latest
    needs:
      - version
      - python-release
      - docker-release-bps
      - docker-release-ppm
      - docker-release-bps-arm
      - docker-release-ppm-arm
    steps:
      - uses: actions/checkout@v2
      - name: Update chart version in the related HelmChart Charts.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'charts/pvc-exporter/Chart.yaml'
          propertyPath: 'version'
          value: ${{ needs.version.outputs.semVer }}
          createPR: false
          commitChange: false
          updateFile: true
          message: 'Update chart version to ${{ needs.version.outputs.version }}'
      - name: Update appVersion in the related HelmChart Charts.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'charts/pvc-exporter/Chart.yaml'
          propertyPath: 'appVersion'
          value: ${{ needs.version.outputs.semVer }}
          createPR: false
          commitChange: false
          updateFile: true
          message: 'Update appVersion to ${{ needs.version.outputs.version }}'

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - uses: azure/setup-helm@v1
        with:
          version: v3.6.3

      - uses: helm/chart-releaser-action@v1.2.1
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
